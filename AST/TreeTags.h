#pragma once

#define AST_TAG_TYPE_KEY "type"
#define AST_TAG_LINE_KEY "line"

#define AST_TAG_VAR "var"
#define AST_TAG_ID "id"

#define AST_TAG_PROGRAM "program"
#define AST_TAG_STMTS "stms"
#define AST_TAG_STMT "stmt"
#define AST_TAG_EXPR "expr"
#define AST_TAG_TERM "term"
#define AST_TAG_ASSIGNEXPR "assignexpr"
#define AST_TAG_PRIMARY "primary"
#define AST_TAG_LVALUE "lvalue"
#define AST_TAG_MEMBER "member"
#define AST_TAG_CALL "call"
#define AST_TAG_CALLSUFFIX "callsuffix"
#define AST_TAG_NORMCALL "normcall"
#define AST_TAG_METHODCALL "methodcall"
#define AST_TAG_ELIST "elist"
#define AST_TAG_OBJECTDEF "objectdef"
#define AST_TAG_INDEXED "indexed"
#define AST_TAG_INDEXEDELEM "indexed"
#define AST_TAG_BLOCK "block"
#define AST_TAG_FUNCDEF "funcdef"
#define AST_TAG_CONST "const"
#define AST_TAG_NUMBER "number"
#define AST_TAG_IDLIST "idlist"
#define AST_TAG_IF "if"
#define AST_TAG_IF_STMT "if_stmt"
#define AST_TAG_IF_COND "if_cond"
#define AST_TAG_WHILE "while"
#define AST_TAG_WHILE_COND "while_cond"
#define AST_TAG_WHILE_STMT "while_stmt"
#define AST_TAG_FOR "for"
#define AST_TAG_FORSTMT "forstmt"
#define AST_TAG_RETURNSTMT "returnstm"
